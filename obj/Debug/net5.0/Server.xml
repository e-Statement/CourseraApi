<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Server</name>
    </assembly>
    <members>
        <member name="M:Server.Controllers.AssignmentController.AddFromAssignmentFileAsync">
            <summary>
            Загрузить в базу данных задания курсов из файла (по умолчанию файл Ural Federal University Learning Program.csv)
            </summary>
        </member>
        <member name="M:Server.Controllers.CourseController.AddFromCoursesFileAsync">
            <summary>
            Загрузить в базу данных курсы из файла (по умолчанию файл usage-report.csv)
            </summary>
        </member>
        <member name="M:Server.Controllers.CourseController.GetAllCoursesAsync">
            <summary>
            Получить все названия курсов
            </summary>
        </member>
        <member name="M:Server.Controllers.FileController.UploadFileAsync(Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            Загрузить файл в папку, указанную в настройках. Также вставляется новая запись в базу данных с названием файла
            </summary>
            <returns>id вставленной записи в базе</returns>
        </member>
        <member name="M:Server.Controllers.FileController.GetAllFilesAsync">
            <summary>
            Получить все записи в таблице FileModel
            </summary>
        </member>
        <member name="M:Server.Controllers.FileController.GetFileAsync(System.Int32)">
            <summary>
            Получить запись в таблице FileModel по id
            </summary>
        </member>
        <member name="M:Server.Controllers.SpecializationController.AddFromSpeciazilationsFileAsync">
            <summary>
            Загрузить все специализации учеников из файла в базу данных в таблицу Specialization (по умолчанию файл specialization-report.csv
            </summary>
            <returns></returns>
        </member>
        <member name="M:Server.Controllers.SpecializationController.GetAllSpecializationsAsync">
            <summary>
            Получить все названия специализаций из таблицы Specialization
            </summary>
            <returns></returns>
        </member>
        <member name="M:Server.Controllers.StudentController.GetStudentAsync(Server.Dto.RequestDto.GetStudentsRequestDto)">
            <summary>
            Получить студентов со следующей информацией:
            ФИО, id в таблице Student, среднее кол-во часов обучения, средняя оценка за курс
            </summary>
        </member>
        <member name="M:Server.Controllers.StudentController.AddFromStudentsFileAsync">
            <summary>
            Загрузить студентов в таблицу Student из файла (по умолчанию membership-report.csv)
            </summary>
            <returns></returns>
        </member>
        <member name="M:Server.Controllers.StudentController.GetStudentByIdWithInfoDto(System.Int32)">
            <summary>
            Получить информацию о студенте, его специализациях, курсах, заданиях
            </summary>
            <param name="id">id в таблице Studdent</param>
        </member>
        <member name="M:Server.Controllers.UnloadController.UnloadBySpecializationAsync(System.String)">
            <summary>
            Выгрузить из таблицы Specialization, Course в виде файла формата xlsx всех студентов и их оценки за курсы на данной специализации
            </summary>
            <param name="specializationName">Название специализации</param>
            <returns></returns>
        </member>
        <member name="M:Server.Controllers.UnloadController.UnloadByCoursesAsync(System.Collections.Generic.List{System.String})">
            <summary>
            Выгрузить из таблицы Course в виде файла формата xlsx всех студентов и их оценки, выбравшие данные курсы
            </summary>
            <param name="courses">Название курсов</param>
            <returns></returns>
        </member>
        <member name="M:Server.Managers.Interfaces.IUploadManager.UploadFormFileAsync``1(System.String,Server.Repository.Interfaces.IBaseRepository{``0},System.Func{System.String,System.Threading.Tasks.Task{Server.Logic.OperationResult{System.Collections.Generic.List{``0}}}})">
            <summary>
            Загрузить из файла в базу данных
            </summary>
            <param name="fileName">Имя файла</param>
            <typeparam name="T">Модель данных</typeparam>
        </member>
        <member name="M:Server.Managers.UploadManager.UploadFormFileAsync``1(System.String,Server.Repository.Interfaces.IBaseRepository{``0},System.Func{System.String,System.Threading.Tasks.Task{Server.Logic.OperationResult{System.Collections.Generic.List{``0}}}})">
            <inheritdoc />
        </member>
        <member name="M:Server.Repository.Interfaces.IBaseRepository`1.AddAsync(`0)">
             <summary>
             Добавить и получить Id
            </summary>
        </member>
        <member name="M:Server.Repository.Interfaces.IBaseRepository`1.GetAllAsync">
             <summary>
             Получить все записи
            </summary>
        </member>
        <member name="M:Server.Repository.Interfaces.IBaseRepository`1.AddMultipleAsync(System.Collections.Generic.IEnumerable{`0})">
             <summary>
             Добавить несколько записей
            </summary>
        </member>
        <member name="P:Server.Settings.IAppSettings.Path">
            <summary>
            Куда сохранять файлы
            </summary>
        </member>
    </members>
</doc>
